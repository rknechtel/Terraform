
## apim-pipeline.yml

trigger:
  branches:
    include:
    - development
    - main
  paths:
    include:
    - apim/*
stages:

## Create Dev APIM
- stage: Dev_Build
  condition: or(startsWith(variables['build.sourceBranch'], 'refs/heads/development'),startsWith(variables['system.pullRequest.targetBranch'], 'refs/heads/development'))
  jobs:
  - template: ../apim/templates/tf_job.yml  # Template reference
    parameters:
      environment: "dev"
      working_dir: "/apim"
	  
## Create Test APIM
- stage: Test_Build
  condition: startsWith(variables['build.sourceBranch'], 'refs/heads/development')
  jobs:
  - template: ../apim/templates/tf_job.yml  # Template reference
    parameters:
      environment: "test"
      working_dir: "/apim"

# Create the PreProd KeyVault Resrouce Group and Key Vault
#- stage: PrePrd_KeyVault_Build
#  condition: startsWith(variables['build.sourceBranch'], 'refs/heads/development')
#  jobs:
#  - template: templates/tf_job_apim.yml  # Template reference
#    parameters:
#      environment: "preprod"
#      working_dir: "/apim/keyvaults"

## Create Preprod APIM
- stage: PrePrd_Build
  condition: startsWith(variables['build.sourceBranch'], 'refs/heads/development')
  jobs:
  - template: ../apim/templates/tf_job.yml  # Template reference
    parameters:
      environment: "preprd"
      working_dir: "/apim"

# Create the Prod KeyVault Resrouce Group and Key Vault
#- stage: Prod_KeyVault_Build
#  condition: startsWith(variables['build.sourceBranch'], 'refs/heads/development')
#  jobs:
#  - template: templates/tf_job_apim.yml  # Template reference
#    parameters:
#      environment: "prd"
#      working_dir: "/apim/keyvaults"

## Create Production APIM
- stage: Prod_Build
  condition: startsWith(variables['build.sourceBranch'], 'refs/heads/main')
  jobs:
  - template: ../apim/templates/tf_job.yml  # Template reference
    parameters:
      environment: "prod"
      working_dir: "/apim"